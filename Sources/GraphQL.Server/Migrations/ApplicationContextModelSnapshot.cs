// <auto-generated />
using System;
using DemoGraphQL.Server.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoGraphQL.Server.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("DemoGraphQL.Server.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b44574d-e3ca-40f6-873b-de4d23f64145"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("10f8dac5-2e64-48a2-a3b0-ada65c4ed3d1"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("03377bf4-5473-45e6-ab1b-cb2cd2c934b6"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("34686dae-a622-4464-921c-b7f682b61ecc"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ebc513bd-39f8-42e2-886f-0647fa9889d9"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("34686dae-a622-4464-921c-b7f682b61ecc"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("DemoGraphQL.Server.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10f8dac5-2e64-48a2-a3b0-ada65c4ed3d1"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("34686dae-a622-4464-921c-b7f682b61ecc"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("DemoGraphQL.Server.Entities.Account", b =>
                {
                    b.HasOne("DemoGraphQL.Server.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DemoGraphQL.Server.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
